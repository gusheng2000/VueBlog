{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"Register\",\n  data: function data() {\n    var _this2 = this;\n\n    var checkUsername = function checkUsername(rule, value, callback) {\n      if (!value) {\n        return callback(new Error('用户名不能为空'));\n      }\n    };\n\n    var validatePass = function validatePass(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else {\n        if (_this2.ruleForm.checkPass !== '') {\n          _this2.$refs.ruleForm.validateField('checkPass');\n        }\n\n        callback();\n      }\n    };\n\n    var validatePass2 = function validatePass2(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== _this2.ruleForm.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      ruleForm: {\n        username: '',\n        password: '',\n        checkPass: ''\n      },\n      rules: {\n        password: [{\n          validator: validatePass,\n          trigger: 'blur'\n        }],\n        checkPass: [{\n          validator: validatePass2,\n          trigger: 'blur'\n        }],\n        username: [{\n          min: 3,\n          max: 10,\n          message: '长度在 3 到 5 个字符',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    isexisting: function isexisting() {\n      this.$axios.get('/isHaveUser', {\n        params: {\n          username: this.ruleForm.username\n        }\n      });\n    },\n    submitForm: function submitForm(formName) {\n      var _this3 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          var _this = _this3;\n          console.log(_this.ruleForm.password);\n\n          _this3.$axios.put('/register', _this.ruleForm).then(function (res) {\n            console.log(res.data);\n          });\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;EACAA,gBADA;EAEAC,IAFA,kBAEA;IAAA;;IACA;MACA;QACA;MACA;IACA,CAJA;;IAKA;MACA;QACAC;MACA,CAFA,MAEA;QACA;UACA;QACA;;QACAA;MACA;IACA,CATA;;IAUA;MACA;QACAA;MACA,CAFA,MAEA;QACAA;MACA,CAFA,MAEA;QACAA;MACA;IACA,CARA;;IASA;MACAC;QACAC,YADA;QAEAC,YAFA;QAGAC;MAHA,CADA;MAOAC;QACAF,WACA;UAAAG;UAAAC;QAAA,CADA,CADA;QAKAH,YACA;UAAAE;UAAAC;QAAA,CADA,CALA;QAQAL,WACA;UAAAM;UAAAC;UAAAC;UAAAH;QAAA,CADA;MARA;IAPA;EAoBA,CA/CA;EAgDAI;IACAC,UADA,wBACA;MACA;QACAC;UACAX;QADA;MADA;IAKA,CAPA;IAQAY,UARA,sBAQAC,QARA,EAQA;MAAA;;MAEA;QACA;UACA;UACAC;;UACA;YACAA;UACA,CAFA;QAGA,CANA,MAMA;UACAA;UACA;QACA;MACA,CAXA;IAYA,CAtBA;IAwBAC,SAxBA,qBAwBAF,QAxBA,EAwBA;MACA;IACA;EA1BA;AAhDA","names":["name","data","callback","ruleForm","username","password","checkPass","rules","validator","trigger","min","max","message","methods","isexisting","params","submitForm","formName","console","resetForm"],"sourceRoot":"src/views","sources":["Register.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-container>\r\n            <el-header>\r\n                <img class=\"mlogo\" src=\"https://markerhub.com/dist/images/logo/markerhub-logo.png\" alt=\"\">\r\n            </el-header>\r\n            <el-main>\r\n                <el-form :model=\"ruleForm\" status-icon :rules=\"rules\" ref=\"ruleForm\" label-width=\"50px\"\r\n                         class=\"demo-ruleForm\">\r\n\r\n                    <el-form-item label=\"用户名\" prop=\"username\">\r\n                        <el-input type=\"text\" v-model=\"ruleForm.username\" autocomplete=\"off\"\r\n                                  @blur=\"isexisting\"></el-input>\r\n                    </el-form-item>\r\n\r\n                    <el-form-item label=\"密码\" prop=\"password\">\r\n                        <el-input type=\"password\" v-model=\"ruleForm.password\" autocomplete=\"off\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"确认密码\" prop=\"checkPass\">\r\n                        <el-input type=\"password\" v-model=\"ruleForm.checkPass\" autocomplete=\"off\"></el-input>\r\n                    </el-form-item>\r\n\r\n                    <el-form-item>\r\n                        <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">提交</el-button>\r\n                        <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\r\n                    </el-form-item>\r\n                </el-form>\r\n            </el-main>\r\n        </el-container>\r\n\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"Register\",\r\n        data() {\r\n            var checkUsername = (rule, value, callback) => {\r\n                if (!value) {\r\n                    return callback(new Error('用户名不能为空'));\r\n                }\r\n            };\r\n            var validatePass = (rule, value, callback) => {\r\n                if (value === '') {\r\n                    callback(new Error('请输入密码'));\r\n                } else {\r\n                    if (this.ruleForm.checkPass !== '') {\r\n                        this.$refs.ruleForm.validateField('checkPass');\r\n                    }\r\n                    callback();\r\n                }\r\n            };\r\n            var validatePass2 = (rule, value, callback) => {\r\n                if (value === '') {\r\n                    callback(new Error('请再次输入密码'));\r\n                } else if (value !== this.ruleForm.password) {\r\n                    callback(new Error('两次输入密码不一致!'));\r\n                } else {\r\n                    callback();\r\n                }\r\n            };\r\n            return {\r\n                ruleForm: {\r\n                    username: '',\r\n                    password: '',\r\n                    checkPass: '',\r\n\r\n                },\r\n                rules: {\r\n                    password: [\r\n                        {validator: validatePass, trigger: 'blur'},\r\n\r\n                    ],\r\n                    checkPass: [\r\n                        {validator: validatePass2, trigger: 'blur'}\r\n                    ],\r\n                    username: [\r\n                        {min: 3, max: 10, message: '长度在 3 到 5 个字符', trigger: 'blur'}\r\n                    ]\r\n                }\r\n            };\r\n        },\r\n        methods: {\r\n            isexisting() {\r\n                this.$axios.get('/isHaveUser', {\r\n                    params: {\r\n                        username: this.ruleForm.username,\r\n                    }\r\n                })\r\n            },\r\n            submitForm(formName) {\r\n\r\n                this.$refs[formName].validate((valid) => {\r\n                    if (valid) {\r\n                        let _this =this\r\n                        console.log(_this.ruleForm.password)\r\n                        this.$axios.put('/register',_this.ruleForm).then(res => {\r\n                            console.log(res.data);\r\n                        })\r\n                    } else {\r\n                        console.log('error submit!!');\r\n                        return false;\r\n                    }\r\n                });\r\n            },\r\n\r\n            resetForm(formName) {\r\n                this.$refs[formName].resetFields();\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .el-header, .el-footer {\r\n        background-color: #B3C0D1;\r\n        color: #333;\r\n        text-align: center;\r\n        line-height: 60px;\r\n    }\r\n\r\n    .mlogo {\r\n        height: 50%;\r\n        margin-top: 10px;\r\n    }\r\n\r\n    .demo-ruleForm {\r\n        max-width: 500px;\r\n        margin: 0 auto;\r\n    }\r\n</style>"]},"metadata":{},"sourceType":"module"}